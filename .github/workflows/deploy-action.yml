name: Auto-Deploy

on: # main branch에 push를 할 때 동작합니다!
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Java
  JAVA_VERSION: 17
  # DockerHub
  DOCKER_HUB_USERNAME: 46112
  DOCKER_IMAGE_NAME: deployment # Docker 이미지 이름 설정
  DOCKER_IMAGE_TAG: latest # Docker 이미지 태그 설정
  # AWS & Elastic Bean Stalk
  AWS_REGION: ap-northeast-2
  EB_ENVIRONMENT_NAME: TarotMate-env
  EB_APPLICATION_NAME: TarotMate
  EB_DEPLOYMENT_PACKAGE: tarot/docker-compose.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x tarot/gradlew
        
      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%d.%m.%Y.%H.%M.%S')"

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image using Jib
        run: ./gradlew jib -Pjib.to.image=docker.io/${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
        working-directory: ./tarot

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: "Version ${{ steps.build-number.outputs.BUILD_NUMBER }} deployed via GitHub Actions ${{ github.sha }}"
          wait_for_deployment: true
          wait_for_environment_recovery: 180
